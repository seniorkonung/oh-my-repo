# yaml-language-server: $schema=https://raw.githubusercontent.com/espanso/espanso/dev/schemas/match.schema.json

matches:
  - trigger: ':promt.trans.changeset'
    label: 'Prompt: Перевод описания changeset'
    replace: |
      # Задание
      Переведи следующий русский текст на английский язык. Это описание части изменения 
      (changeset) для системы управления версиями или пакетами.

      # Требования к переводу:

      1. **Краткость и точность**: Описание должно быть лаконичным и четко передавать суть изменения
      2. **Техническая терминология**: Используй принятые в разработке термины и конвенции
      3. **Формат**: Описание должно быть в формате, подходящем для changelog или commit message
      4. **Время**: Используй прошедшее время (например, "Added", "Fixed", "Updated")
      5. **Стиль**: Начинай с заглавной буквы, без точки в конце (если это одно предложение)

      # Требования к формату ответа:

      Не комментируй свои действия, просто выполни инструкции.

      # Примеры хорошего перевода:

      - "Добавлена поддержка TypeScript" → "Added TypeScript support"
      - "Исправлена ошибка с валидацией форм" → "Fixed form validation error"
      - "Обновлены зависимости до последних версий" → "Updated dependencies to latest versions"

      # Текст для перевода:
      {{text.plain}}
    vars:
      - name: text
        type: form
        params:
          layout: '[[plain]]'
          fields:
            plain:
              multiline: true

  - trigger: ':promt.trans.gitbranch'
    label: 'Prompt: Генерация названия feature branch в git из описания на русском'
    replace: |
      # Задание
      Переведи название feature ветки git с русского на английский язык. 

      # Требования:

      1. Начинай с соответствующего prefix'а согласно Conventional Commits:
        - feat/ - для новых функций
        - fix/ - для исправления багов
        - refactor/ - для рефакторинга кода
        - docs/ - для документации
        - test/ - для тестов
        - chore/ - для вспомогательных задач
        - style/ - для стилистических изменений
        - perf/ - для улучшения производительности

      2. После prefix'а используй kebab-case (слова через дефис, все строчные буквы)
      3. Название должно быть кратким и описательным
      4. Используй глаголы в повелительном наклонении или существительные
      5. Избегай артиклей (a, an, the)
      6. Используй технические термины на английском языке
      7. Максимальная длина - 60 символов
      8. Не комментируй свои действия, просто выполни инструкции.

      # Примеры:
      - "Добавить авторизацию пользователя" → "feat/add-user-authentication"
      - "Исправить баг с загрузкой файлов" → "fix/file-upload-error"
      - "Обновить дизайн главной страницы" → "feat/update-homepage-design"
      - "Рефакторинг API для заказов" → "refactor/orders-api"
      - "Добавить тесты для корзины" → "test/shopping-cart-tests"

      # Текст для перевода:
      {{text.plain}}
    vars:
      - name: text
        type: form
        params:
          layout: '[[plain]]'

  - trigger: ':promt.gen.varname'
    label: 'Prompt: Генерация названия переменной в TS по описанию и назначению'
    replace: |
      # Роль
      Вы - эксперт по TypeScript и именованию переменных, специализирующийся на адаптации русскоязычных
      описаний в соответствии с передовыми стандартами разработки.

      # Задача
      Преобразовать русскоязычное описание и требование к переменной в корректное английское
      название переменной согласно стандартам TypeScript.

      # Стандарты именования TypeScript

      ## Общие принципы
      - Использовать **camelCase** для переменных и функций
      - Использовать **PascalCase** для типов, интерфейсов и классов
      - Использовать **SCREAMING_SNAKE_CASE** для констант
      - Названия должны быть описательными и понятными
      - Избегать сокращений, кроме общепринятых
      - Использовать английские термины из предметной области

      ## Специфические правила
      - Булевы переменные: начинать с `is`, `has`, `can`, `should`, `will`, etc
      - Массивы: использовать множественное число или суффикс `List`
      - Функции: использовать глаголы (`get`, `set`, `create`, `update`, `delete`, etc)
      - События: использовать префикс `on` или суффикс `Handler`

      # Входные данные
      ```
      {{input.text}}
      ```

      # Выходные данные
      Верните только название переменной без дополнительных объяснений, комментариев или размышлений.

      # Примеры

      ## Пример 1
      **Вход:** "Список активных подписок пользователя на уведомления"
      **Выход:** `activeUserNotificationSubscriptions`

      ## Пример 2
      **Вход:** "Флаг указывающий на то, что пользователь авторизован"
      **Выход:** `isUserAuthenticated`

      ## Пример 3
      **Вход:** "Асинхронная функция для валидации email адреса через внешний сервис"
      **Выход:** `validateEmailAsync`

      ## Пример 4
      **Вход:** "Константа максимального размера файла"
      **Выход:** `MAX_FILE_SIZE`

      ## Пример 5
      **Вход:** "Обработчик события клика по кнопке"
      **Выход:** `handleButtonClick`

      ## Пример 6
      **Вход:** "Конфигурация параметров подключения к базе данных"
      **Выход:** `databaseConnectionConfig`

      # Инструкция
      Проанализируйте предоставленное описание и создайте подходящее название переменной, следуя
      указанным стандартам. Учитывайте контекст и назначение переменной для выбора наиболее подходящего паттерна именования.
    vars:
      - name: input
        type: form
        params:
          layout: '[[text]]'
          fields:
            text:
              multiline: true

  - trigger: ':promt.expert'
    label: 'Prompt: Инструкция для повышения точности и экспертности'
    replace: |
      Ты — проверенный эксперт по {{theme.plain}}.  
      Действуй строго по шагам:
      1. Прочитай задачу и уточни, что требуется;  
      2. Составь план решения (до 5 пунктов);  
      3. Рассуждай пошагово;  
      4. Дай финальный ответ одной строкой;  
      5. Оцени уверенность в процентах и объясни сомнения;  
      6. Перечисли 1-3 альтернативы и условия для них;  
      7. Сделай самопроверку и исправь ошибки, если нашел.
    vars:
      - name: theme
        type: form
        params:
          layout: 'Ты — проверенный эксперт по [[plain]]'
